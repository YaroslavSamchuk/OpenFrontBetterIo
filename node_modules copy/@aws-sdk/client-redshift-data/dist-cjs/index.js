"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ActiveSessionsExceededException: () => ActiveSessionsExceededException,
  ActiveStatementsExceededException: () => ActiveStatementsExceededException,
  BatchExecuteStatementCommand: () => BatchExecuteStatementCommand,
  BatchExecuteStatementException: () => BatchExecuteStatementException,
  CancelStatementCommand: () => CancelStatementCommand,
  DatabaseConnectionException: () => DatabaseConnectionException,
  DescribeStatementCommand: () => DescribeStatementCommand,
  DescribeTableCommand: () => DescribeTableCommand,
  ExecuteStatementCommand: () => ExecuteStatementCommand,
  ExecuteStatementException: () => ExecuteStatementException,
  Field: () => Field,
  GetStatementResultCommand: () => GetStatementResultCommand,
  GetStatementResultV2Command: () => GetStatementResultV2Command,
  InternalServerException: () => InternalServerException,
  ListDatabasesCommand: () => ListDatabasesCommand,
  ListSchemasCommand: () => ListSchemasCommand,
  ListStatementsCommand: () => ListStatementsCommand,
  ListTablesCommand: () => ListTablesCommand,
  QueryRecords: () => QueryRecords,
  QueryTimeoutException: () => QueryTimeoutException,
  RedshiftData: () => RedshiftData,
  RedshiftDataClient: () => RedshiftDataClient,
  RedshiftDataServiceException: () => RedshiftDataServiceException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResultFormatString: () => ResultFormatString,
  StatementStatusString: () => StatementStatusString,
  StatusString: () => StatusString,
  ValidationException: () => ValidationException,
  __Client: () => import_smithy_client.Client,
  paginateDescribeTable: () => paginateDescribeTable,
  paginateGetStatementResult: () => paginateGetStatementResult,
  paginateGetStatementResultV2: () => paginateGetStatementResultV2,
  paginateListDatabases: () => paginateListDatabases,
  paginateListSchemas: () => paginateListSchemas,
  paginateListStatements: () => paginateListStatements,
  paginateListTables: () => paginateListTables
});
module.exports = __toCommonJS(src_exports);

// src/RedshiftDataClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "redshift-data"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/RedshiftDataClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/RedshiftDataClient.ts
var RedshiftDataClient = class extends import_smithy_client.Client {
  static {
    __name(this, "RedshiftDataClient");
  }
  /**
   * The resolved configuration of RedshiftDataClient class. This is resolved and normalized from the {@link RedshiftDataClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultRedshiftDataHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/RedshiftData.ts


// src/commands/BatchExecuteStatementCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_json1_1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/RedshiftDataServiceException.ts

var RedshiftDataServiceException = class _RedshiftDataServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "RedshiftDataServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _RedshiftDataServiceException.prototype);
  }
};

// src/models/models_0.ts
var ActiveSessionsExceededException = class _ActiveSessionsExceededException extends RedshiftDataServiceException {
  static {
    __name(this, "ActiveSessionsExceededException");
  }
  name = "ActiveSessionsExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ActiveSessionsExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ActiveSessionsExceededException.prototype);
    this.Message = opts.Message;
  }
};
var ActiveStatementsExceededException = class _ActiveStatementsExceededException extends RedshiftDataServiceException {
  static {
    __name(this, "ActiveStatementsExceededException");
  }
  name = "ActiveStatementsExceededException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ActiveStatementsExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ActiveStatementsExceededException.prototype);
    this.Message = opts.Message;
  }
};
var BatchExecuteStatementException = class _BatchExecuteStatementException extends RedshiftDataServiceException {
  static {
    __name(this, "BatchExecuteStatementException");
  }
  name = "BatchExecuteStatementException";
  $fault = "server";
  Message;
  /**
   * <p>Statement identifier of the exception.</p>
   * @public
   */
  StatementId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "BatchExecuteStatementException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _BatchExecuteStatementException.prototype);
    this.Message = opts.Message;
    this.StatementId = opts.StatementId;
  }
};
var ResultFormatString = {
  CSV: "CSV",
  JSON: "JSON"
};
var InternalServerException = class _InternalServerException extends RedshiftDataServiceException {
  static {
    __name(this, "InternalServerException");
  }
  name = "InternalServerException";
  $fault = "server";
  /**
   * <p>The exception message.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.Message = opts.Message;
  }
};
var ValidationException = class _ValidationException extends RedshiftDataServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * <p>The exception message.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.Message = opts.Message;
  }
};
var DatabaseConnectionException = class _DatabaseConnectionException extends RedshiftDataServiceException {
  static {
    __name(this, "DatabaseConnectionException");
  }
  name = "DatabaseConnectionException";
  $fault = "server";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "DatabaseConnectionException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _DatabaseConnectionException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends RedshiftDataServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * <p>The exception message.</p>
   * @public
   */
  Message;
  /**
   * <p>Resource identifier associated with the exception.</p>
   * @public
   */
  ResourceId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
    this.ResourceId = opts.ResourceId;
  }
};
var StatusString = {
  ABORTED: "ABORTED",
  ALL: "ALL",
  FAILED: "FAILED",
  FINISHED: "FINISHED",
  PICKED: "PICKED",
  STARTED: "STARTED",
  SUBMITTED: "SUBMITTED"
};
var StatementStatusString = {
  ABORTED: "ABORTED",
  FAILED: "FAILED",
  FINISHED: "FINISHED",
  PICKED: "PICKED",
  STARTED: "STARTED",
  SUBMITTED: "SUBMITTED"
};
var QueryTimeoutException = class _QueryTimeoutException extends RedshiftDataServiceException {
  static {
    __name(this, "QueryTimeoutException");
  }
  name = "QueryTimeoutException";
  $fault = "client";
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "QueryTimeoutException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _QueryTimeoutException.prototype);
    this.Message = opts.Message;
  }
};
var ExecuteStatementException = class _ExecuteStatementException extends RedshiftDataServiceException {
  static {
    __name(this, "ExecuteStatementException");
  }
  name = "ExecuteStatementException";
  $fault = "server";
  /**
   * <p>The exception message.</p>
   * @public
   */
  Message;
  /**
   * <p>Statement identifier of the exception.</p>
   * @public
   */
  StatementId;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ExecuteStatementException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _ExecuteStatementException.prototype);
    this.Message = opts.Message;
    this.StatementId = opts.StatementId;
  }
};
var Field;
((Field3) => {
  Field3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.isNull !== void 0)
      return visitor.isNull(value.isNull);
    if (value.booleanValue !== void 0)
      return visitor.booleanValue(value.booleanValue);
    if (value.longValue !== void 0)
      return visitor.longValue(value.longValue);
    if (value.doubleValue !== void 0)
      return visitor.doubleValue(value.doubleValue);
    if (value.stringValue !== void 0)
      return visitor.stringValue(value.stringValue);
    if (value.blobValue !== void 0)
      return visitor.blobValue(value.blobValue);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Field || (Field = {}));
var QueryRecords;
((QueryRecords2) => {
  QueryRecords2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.CSVRecords !== void 0)
      return visitor.CSVRecords(value.CSVRecords);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(QueryRecords || (QueryRecords = {}));

// src/protocols/Aws_json1_1.ts
var se_BatchExecuteStatementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("BatchExecuteStatement");
  let body;
  body = JSON.stringify(se_BatchExecuteStatementInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_BatchExecuteStatementCommand");
var se_CancelStatementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CancelStatement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CancelStatementCommand");
var se_DescribeStatementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeStatement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeStatementCommand");
var se_DescribeTableCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeTable");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeTableCommand");
var se_ExecuteStatementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ExecuteStatement");
  let body;
  body = JSON.stringify(se_ExecuteStatementInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ExecuteStatementCommand");
var se_GetStatementResultCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetStatementResult");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetStatementResultCommand");
var se_GetStatementResultV2Command = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("GetStatementResultV2");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_GetStatementResultV2Command");
var se_ListDatabasesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListDatabases");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListDatabasesCommand");
var se_ListSchemasCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListSchemas");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSchemasCommand");
var se_ListStatementsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListStatements");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListStatementsCommand");
var se_ListTablesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTables");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTablesCommand");
var de_BatchExecuteStatementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_BatchExecuteStatementOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_BatchExecuteStatementCommand");
var de_CancelStatementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CancelStatementCommand");
var de_DescribeStatementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeStatementResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeStatementCommand");
var de_DescribeTableCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeTableCommand");
var de_ExecuteStatementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ExecuteStatementOutput(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ExecuteStatementCommand");
var de_GetStatementResultCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_GetStatementResultResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetStatementResultCommand");
var de_GetStatementResultV2Command = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_GetStatementResultV2Command");
var de_ListDatabasesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListDatabasesCommand");
var de_ListSchemasCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSchemasCommand");
var de_ListStatementsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListStatementsResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListStatementsCommand");
var de_ListTablesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTablesCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "ActiveSessionsExceededException":
    case "com.amazonaws.redshiftdata#ActiveSessionsExceededException":
      throw await de_ActiveSessionsExceededExceptionRes(parsedOutput, context);
    case "ActiveStatementsExceededException":
    case "com.amazonaws.redshiftdata#ActiveStatementsExceededException":
      throw await de_ActiveStatementsExceededExceptionRes(parsedOutput, context);
    case "BatchExecuteStatementException":
    case "com.amazonaws.redshiftdata#BatchExecuteStatementException":
      throw await de_BatchExecuteStatementExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.redshiftdata#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.redshiftdata#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "DatabaseConnectionException":
    case "com.amazonaws.redshiftdata#DatabaseConnectionException":
      throw await de_DatabaseConnectionExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.redshiftdata#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "QueryTimeoutException":
    case "com.amazonaws.redshiftdata#QueryTimeoutException":
      throw await de_QueryTimeoutExceptionRes(parsedOutput, context);
    case "ExecuteStatementException":
    case "com.amazonaws.redshiftdata#ExecuteStatementException":
      throw await de_ExecuteStatementExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_ActiveSessionsExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ActiveSessionsExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ActiveSessionsExceededExceptionRes");
var de_ActiveStatementsExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ActiveStatementsExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ActiveStatementsExceededExceptionRes");
var de_BatchExecuteStatementExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new BatchExecuteStatementException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_BatchExecuteStatementExceptionRes");
var de_DatabaseConnectionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new DatabaseConnectionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_DatabaseConnectionExceptionRes");
var de_ExecuteStatementExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ExecuteStatementException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ExecuteStatementExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServerExceptionRes");
var de_QueryTimeoutExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new QueryTimeoutException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_QueryTimeoutExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ValidationExceptionRes");
var se_BatchExecuteStatementInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    ClusterIdentifier: [],
    Database: [],
    DbUser: [],
    ResultFormat: [],
    SecretArn: [],
    SessionId: [],
    SessionKeepAliveSeconds: [],
    Sqls: import_smithy_client._json,
    StatementName: [],
    WithEvent: [],
    WorkgroupName: []
  });
}, "se_BatchExecuteStatementInput");
var se_ExecuteStatementInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
    ClusterIdentifier: [],
    Database: [],
    DbUser: [],
    Parameters: import_smithy_client._json,
    ResultFormat: [],
    SecretArn: [],
    SessionId: [],
    SessionKeepAliveSeconds: [],
    Sql: [],
    StatementName: [],
    WithEvent: [],
    WorkgroupName: []
  });
}, "se_ExecuteStatementInput");
var de_BatchExecuteStatementOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ClusterIdentifier: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Database: import_smithy_client.expectString,
    DbGroups: import_smithy_client._json,
    DbUser: import_smithy_client.expectString,
    Id: import_smithy_client.expectString,
    SecretArn: import_smithy_client.expectString,
    SessionId: import_smithy_client.expectString,
    WorkgroupName: import_smithy_client.expectString
  });
}, "de_BatchExecuteStatementOutput");
var de_DescribeStatementResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ClusterIdentifier: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Database: import_smithy_client.expectString,
    DbUser: import_smithy_client.expectString,
    Duration: import_smithy_client.expectLong,
    Error: import_smithy_client.expectString,
    HasResultSet: import_smithy_client.expectBoolean,
    Id: import_smithy_client.expectString,
    QueryParameters: import_smithy_client._json,
    QueryString: import_smithy_client.expectString,
    RedshiftPid: import_smithy_client.expectLong,
    RedshiftQueryId: import_smithy_client.expectLong,
    ResultFormat: import_smithy_client.expectString,
    ResultRows: import_smithy_client.expectLong,
    ResultSize: import_smithy_client.expectLong,
    SecretArn: import_smithy_client.expectString,
    SessionId: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    SubStatements: (_) => de_SubStatementList(_, context),
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    WorkgroupName: import_smithy_client.expectString
  });
}, "de_DescribeStatementResponse");
var de_ExecuteStatementOutput = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ClusterIdentifier: import_smithy_client.expectString,
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Database: import_smithy_client.expectString,
    DbGroups: import_smithy_client._json,
    DbUser: import_smithy_client.expectString,
    Id: import_smithy_client.expectString,
    SecretArn: import_smithy_client.expectString,
    SessionId: import_smithy_client.expectString,
    WorkgroupName: import_smithy_client.expectString
  });
}, "de_ExecuteStatementOutput");
var de_Field = /* @__PURE__ */ __name((output, context) => {
  if (output.blobValue != null) {
    return {
      blobValue: context.base64Decoder(output.blobValue)
    };
  }
  if ((0, import_smithy_client.expectBoolean)(output.booleanValue) !== void 0) {
    return { booleanValue: (0, import_smithy_client.expectBoolean)(output.booleanValue) };
  }
  if ((0, import_smithy_client.limitedParseDouble)(output.doubleValue) !== void 0) {
    return { doubleValue: (0, import_smithy_client.limitedParseDouble)(output.doubleValue) };
  }
  if ((0, import_smithy_client.expectBoolean)(output.isNull) !== void 0) {
    return { isNull: (0, import_smithy_client.expectBoolean)(output.isNull) };
  }
  if ((0, import_smithy_client.expectLong)(output.longValue) !== void 0) {
    return { longValue: (0, import_smithy_client.expectLong)(output.longValue) };
  }
  if ((0, import_smithy_client.expectString)(output.stringValue) !== void 0) {
    return { stringValue: (0, import_smithy_client.expectString)(output.stringValue) };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_Field");
var de_FieldList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Field((0, import_core2.awsExpectUnion)(entry), context);
  });
  return retVal;
}, "de_FieldList");
var de_GetStatementResultResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ColumnMetadata: import_smithy_client._json,
    NextToken: import_smithy_client.expectString,
    Records: (_) => de_SqlRecords(_, context),
    TotalNumRows: import_smithy_client.expectLong
  });
}, "de_GetStatementResultResponse");
var de_ListStatementsResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    NextToken: import_smithy_client.expectString,
    Statements: (_) => de_StatementList(_, context)
  });
}, "de_ListStatementsResponse");
var de_SqlRecords = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_FieldList(entry, context);
  });
  return retVal;
}, "de_SqlRecords");
var de_StatementData = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Id: import_smithy_client.expectString,
    IsBatchStatement: import_smithy_client.expectBoolean,
    QueryParameters: import_smithy_client._json,
    QueryString: import_smithy_client.expectString,
    QueryStrings: import_smithy_client._json,
    ResultFormat: import_smithy_client.expectString,
    SecretArn: import_smithy_client.expectString,
    SessionId: import_smithy_client.expectString,
    StatementName: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_StatementData");
var de_StatementList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_StatementData(entry, context);
  });
  return retVal;
}, "de_StatementList");
var de_SubStatementData = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    CreatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Duration: import_smithy_client.expectLong,
    Error: import_smithy_client.expectString,
    HasResultSet: import_smithy_client.expectBoolean,
    Id: import_smithy_client.expectString,
    QueryString: import_smithy_client.expectString,
    RedshiftQueryId: import_smithy_client.expectLong,
    ResultRows: import_smithy_client.expectLong,
    ResultSize: import_smithy_client.expectLong,
    Status: import_smithy_client.expectString,
    UpdatedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))
  });
}, "de_SubStatementData");
var de_SubStatementList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SubStatementData(entry, context);
  });
  return retVal;
}, "de_SubStatementList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(RedshiftDataServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `RedshiftData.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/BatchExecuteStatementCommand.ts
var BatchExecuteStatementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "BatchExecuteStatement", {}).n("RedshiftDataClient", "BatchExecuteStatementCommand").f(void 0, void 0).ser(se_BatchExecuteStatementCommand).de(de_BatchExecuteStatementCommand).build() {
  static {
    __name(this, "BatchExecuteStatementCommand");
  }
};

// src/commands/CancelStatementCommand.ts



var CancelStatementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "CancelStatement", {}).n("RedshiftDataClient", "CancelStatementCommand").f(void 0, void 0).ser(se_CancelStatementCommand).de(de_CancelStatementCommand).build() {
  static {
    __name(this, "CancelStatementCommand");
  }
};

// src/commands/DescribeStatementCommand.ts



var DescribeStatementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "DescribeStatement", {}).n("RedshiftDataClient", "DescribeStatementCommand").f(void 0, void 0).ser(se_DescribeStatementCommand).de(de_DescribeStatementCommand).build() {
  static {
    __name(this, "DescribeStatementCommand");
  }
};

// src/commands/DescribeTableCommand.ts



var DescribeTableCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "DescribeTable", {}).n("RedshiftDataClient", "DescribeTableCommand").f(void 0, void 0).ser(se_DescribeTableCommand).de(de_DescribeTableCommand).build() {
  static {
    __name(this, "DescribeTableCommand");
  }
};

// src/commands/ExecuteStatementCommand.ts



var ExecuteStatementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "ExecuteStatement", {}).n("RedshiftDataClient", "ExecuteStatementCommand").f(void 0, void 0).ser(se_ExecuteStatementCommand).de(de_ExecuteStatementCommand).build() {
  static {
    __name(this, "ExecuteStatementCommand");
  }
};

// src/commands/GetStatementResultCommand.ts



var GetStatementResultCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "GetStatementResult", {}).n("RedshiftDataClient", "GetStatementResultCommand").f(void 0, void 0).ser(se_GetStatementResultCommand).de(de_GetStatementResultCommand).build() {
  static {
    __name(this, "GetStatementResultCommand");
  }
};

// src/commands/GetStatementResultV2Command.ts



var GetStatementResultV2Command = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "GetStatementResultV2", {}).n("RedshiftDataClient", "GetStatementResultV2Command").f(void 0, void 0).ser(se_GetStatementResultV2Command).de(de_GetStatementResultV2Command).build() {
  static {
    __name(this, "GetStatementResultV2Command");
  }
};

// src/commands/ListDatabasesCommand.ts



var ListDatabasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "ListDatabases", {}).n("RedshiftDataClient", "ListDatabasesCommand").f(void 0, void 0).ser(se_ListDatabasesCommand).de(de_ListDatabasesCommand).build() {
  static {
    __name(this, "ListDatabasesCommand");
  }
};

// src/commands/ListSchemasCommand.ts



var ListSchemasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "ListSchemas", {}).n("RedshiftDataClient", "ListSchemasCommand").f(void 0, void 0).ser(se_ListSchemasCommand).de(de_ListSchemasCommand).build() {
  static {
    __name(this, "ListSchemasCommand");
  }
};

// src/commands/ListStatementsCommand.ts



var ListStatementsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "ListStatements", {}).n("RedshiftDataClient", "ListStatementsCommand").f(void 0, void 0).ser(se_ListStatementsCommand).de(de_ListStatementsCommand).build() {
  static {
    __name(this, "ListStatementsCommand");
  }
};

// src/commands/ListTablesCommand.ts



var ListTablesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("RedshiftData", "ListTables", {}).n("RedshiftDataClient", "ListTablesCommand").f(void 0, void 0).ser(se_ListTablesCommand).de(de_ListTablesCommand).build() {
  static {
    __name(this, "ListTablesCommand");
  }
};

// src/RedshiftData.ts
var commands = {
  BatchExecuteStatementCommand,
  CancelStatementCommand,
  DescribeStatementCommand,
  DescribeTableCommand,
  ExecuteStatementCommand,
  GetStatementResultCommand,
  GetStatementResultV2Command,
  ListDatabasesCommand,
  ListSchemasCommand,
  ListStatementsCommand,
  ListTablesCommand
};
var RedshiftData = class extends RedshiftDataClient {
  static {
    __name(this, "RedshiftData");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, RedshiftData);

// src/pagination/DescribeTablePaginator.ts

var paginateDescribeTable = (0, import_core.createPaginator)(RedshiftDataClient, DescribeTableCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetStatementResultPaginator.ts

var paginateGetStatementResult = (0, import_core.createPaginator)(RedshiftDataClient, GetStatementResultCommand, "NextToken", "NextToken", "");

// src/pagination/GetStatementResultV2Paginator.ts

var paginateGetStatementResultV2 = (0, import_core.createPaginator)(RedshiftDataClient, GetStatementResultV2Command, "NextToken", "NextToken", "");

// src/pagination/ListDatabasesPaginator.ts

var paginateListDatabases = (0, import_core.createPaginator)(RedshiftDataClient, ListDatabasesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSchemasPaginator.ts

var paginateListSchemas = (0, import_core.createPaginator)(RedshiftDataClient, ListSchemasCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListStatementsPaginator.ts

var paginateListStatements = (0, import_core.createPaginator)(RedshiftDataClient, ListStatementsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTablesPaginator.ts

var paginateListTables = (0, import_core.createPaginator)(RedshiftDataClient, ListTablesCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  RedshiftDataServiceException,
  __Client,
  RedshiftDataClient,
  RedshiftData,
  $Command,
  BatchExecuteStatementCommand,
  CancelStatementCommand,
  DescribeStatementCommand,
  DescribeTableCommand,
  ExecuteStatementCommand,
  GetStatementResultCommand,
  GetStatementResultV2Command,
  ListDatabasesCommand,
  ListSchemasCommand,
  ListStatementsCommand,
  ListTablesCommand,
  paginateDescribeTable,
  paginateGetStatementResult,
  paginateGetStatementResultV2,
  paginateListDatabases,
  paginateListSchemas,
  paginateListStatements,
  paginateListTables,
  ActiveSessionsExceededException,
  ActiveStatementsExceededException,
  BatchExecuteStatementException,
  ResultFormatString,
  InternalServerException,
  ValidationException,
  DatabaseConnectionException,
  ResourceNotFoundException,
  StatusString,
  StatementStatusString,
  QueryTimeoutException,
  ExecuteStatementException,
  Field,
  QueryRecords
});

